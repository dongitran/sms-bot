name: Deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  send-notification-started:
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_DEPLOYMENTS }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *🚀 OTP Sms Bot* 🏃‍♂️${{ github.run_number }}

            *👤 Committer:* [${{ github.actor }}](https://github.com/${{ github.actor }})
            *📝 Commit message:* ${{ github.event.commits[0].message }}
            *📦 Repository:* ${{ github.repository }}
            *🔍 See changes:* [View changes](https://github.com/${{ github.repository }}/commit/${{github.sha}})

            Started 🚁️️️️️️🚁️️️️️️🚁️️️️️️🚁️️️️️️

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image
        run: |
          docker buildx create --name builder --use
          docker buildx inspect builder --bootstrap
          docker buildx build -t ideavn/sms-bot-urbox:${{ github.run_number }} --push .

  deploy:
    needs: build
    if: ${{ success() && needs.build.result == 'success' }}
    runs-on: ubuntu-latest
    env:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install doctl
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/download/v1.61.0/doctl-1.61.0-linux-amd64.tar.gz | tar -xzv
          sudo mv ./doctl /usr/local/bin/doctl
          doctl version

      - name: Download kubectl
        uses: steebchen/kubectl@v2.0.0
        with:
          version: latest

      - name: Authenticate with DigitalOcean
        run: |
          doctl auth init -t $ACCESS_TOKEN

      - name: Apply Kubernetes deployment
        env:
          K8S_ID: ${{ secrets.K8S_ID }}
        run: |
          doctl kubernetes cluster kubeconfig save ${K8S_ID}
          kubectl apply -f ./deployment/namespace.yaml
          sed -i 's/{latest}/${{ github.run_number }}/g' ./deployment/main.yaml
          kubectl apply -f ./deployment/main.yaml --validate=false

  send-notification-build-failed:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ failure() && needs.build.result == 'failure' }}
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_DEPLOYMENTS }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *❌ OTP Sms Bot*

            *👤 Committer:* [${{ github.actor }}](https://github.com/${{ github.actor }})
            *📝 Commit message:* ${{ github.event.commits[0].message }}
            *📦 Repository:* ${{ github.repository }}
            *🔍 See changes:* [View changes](https://github.com/${{ github.repository }}/commit/${{github.sha}})

            *Build Failed*
            😐️️️️️️😐️️️️️️😐️️️️️️😐️️️️️️😐️️️️️️😐️️️️️️

  send-notification-successful:
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ success() && needs.deploy.result == 'success' }}
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_DEPLOYMENTS }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *🎉 OTP Sms Bot*

            *👤 Committer:* [${{ github.actor }}](https://github.com/${{ github.actor }})
            *📝 Commit message:* ${{ github.event.commits[0].message }}
            *📦 Repository:* ${{ github.repository }}
            *🔍 See changes:* [View changes](https://github.com/${{ github.repository }}/commit/${{github.sha}})

            *Deployment Successful*
            🚀️️️️️️🚀️️️️️️🚀️️️️️️🚀️️️️️️🚀️️️️️️🚀️️️️️️

  send-notification-deploy-failed:
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ failure() && needs.deploy.result == 'failure' }}
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_DEPLOYMENTS }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *❌ OTP Sms Bot*

            *👤 Committer:* [${{ github.actor }}](https://github.com/${{ github.actor }})
            *📝 Commit message:* ${{ github.event.commits[0].message }}
            *📦 Repository:* ${{ github.repository }}
            *🔍 See changes:* [View changes](https://github.com/${{ github.repository }}/commit/${{github.sha}})

            *Deployment Failed*
            😐️️️️️️😐️️️️️️😐️️️️️️😐️️️️️️😐️️️️️️😐️️️️️️
